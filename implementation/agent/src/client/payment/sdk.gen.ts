// This file is auto-generated by @hey-api/openapi-ts

import type {
	Options as ClientOptions,
	TDataShape,
	Client,
} from "@hey-api/client-fetch";
import type {
	GetInvoicesByIdData,
	GetInvoicesByIdResponse,
	GetInvoicesByIdError,
	PostInvoicesData,
	PostInvoicesResponse,
	PostInvoicesByIdPaymentData,
	PostInvoicesByIdPaymentResponse,
	PostInvoicesByIdPaymentError,
} from "./types.gen";
import { client as _heyApiClient } from "./client.gen";

export type Options<
	TData extends TDataShape = TDataShape,
	ThrowOnError extends boolean = boolean,
> = ClientOptions<TData, ThrowOnError> & {
	/**
	 * You can provide a client instance returned by `createClient()` instead of
	 * individual options. This might be also useful if you want to implement a
	 * custom client.
	 */
	client?: Client;
	/**
	 * You can pass arbitrary values through the `meta` object. This can be
	 * used to access values that aren't defined as part of the SDK function.
	 */
	meta?: Record<string, unknown>;
};

/**
 * Get Invoice
 */
export const getInvoicesById = <ThrowOnError extends boolean = false>(
	options: Options<GetInvoicesByIdData, ThrowOnError>,
) => {
	return (options.client ?? _heyApiClient).get<
		GetInvoicesByIdResponse,
		GetInvoicesByIdError,
		ThrowOnError
	>({
		url: "/invoices/{id}",
		...options,
	});
};

/**
 * Create Invoice
 */
export const postInvoices = <ThrowOnError extends boolean = false>(
	options?: Options<PostInvoicesData, ThrowOnError>,
) => {
	return (options?.client ?? _heyApiClient).post<
		PostInvoicesResponse,
		unknown,
		ThrowOnError
	>({
		url: "/invoices",
		...options,
		headers: {
			"Content-Type": "application/json",
			...options?.headers,
		},
	});
};

/**
 * Pay Invoice
 */
export const postInvoicesByIdPayment = <ThrowOnError extends boolean = false>(
	options: Options<PostInvoicesByIdPaymentData, ThrowOnError>,
) => {
	return (options.client ?? _heyApiClient).post<
		PostInvoicesByIdPaymentResponse,
		PostInvoicesByIdPaymentError,
		ThrowOnError
	>({
		url: "/invoices/{id}/payment",
		...options,
		headers: {
			"Content-Type": "application/json",
			...options?.headers,
		},
	});
};
